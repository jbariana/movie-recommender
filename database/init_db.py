"""
init_db.py
Creates the DB schema for the movie recommender (works for SQLite and Postgres).
"""

from __future__ import annotations
import os
from database.connection import get_db

IS_PG = bool(os.getenv("DATABASE_URL", "").strip())

SCHEMA_SQL_PG = """
CREATE TABLE IF NOT EXISTS users (
    user_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    username TEXT NOT NULL UNIQUE
);
CREATE TABLE IF NOT EXISTS movies (
    movie_id INTEGER PRIMARY KEY,
    title TEXT NOT NULL,
    year INTEGER,
    genres TEXT
);
CREATE TABLE IF NOT EXISTS ratings (
    user_id INTEGER NOT NULL,
    movie_id INTEGER NOT NULL,
    rating DOUBLE PRECISION NOT NULL,
    timestamp BIGINT NOT NULL,
    PRIMARY KEY (user_id, movie_id, timestamp),
    FOREIGN KEY (movie_id) REFERENCES movies(movie_id),
    FOREIGN KEY (user_id) REFERENCES users(user_id)
);
CREATE TABLE IF NOT EXISTS tags (
    user_id INTEGER NOT NULL,
    movie_id INTEGER NOT NULL,
    tag TEXT NOT NULL,
    timestamp BIGINT NOT NULL,
    PRIMARY KEY (user_id, movie_id, tag, timestamp),
    FOREIGN KEY (movie_id) REFERENCES movies(movie_id)
);
CREATE TABLE IF NOT EXISTS links (
    movie_id INTEGER PRIMARY KEY,
    imdb_id INTEGER,
    tmdb_id INTEGER,
    FOREIGN KEY (movie_id) REFERENCES movies(movie_id)
);
CREATE INDEX IF NOT EXISTS idx_ratings_user ON ratings(user_id);
CREATE INDEX IF NOT EXISTS idx_ratings_movie ON ratings(movie_id);
CREATE INDEX IF NOT EXISTS idx_tags_movie ON tags(movie_id);
"""

SCHEMA_SQL_SQLITE = """
PRAGMA foreign_keys = ON;
CREATE TABLE IF NOT EXISTS users (
    user_id INTEGER PRIMARY KEY AUTOINCREMENT,
    username TEXT UNIQUE
);
CREATE TABLE IF NOT EXISTS movies (
    movie_id INTEGER PRIMARY KEY,
    title TEXT NOT NULL,
    year INTEGER,
    genres TEXT
);
CREATE TABLE IF NOT EXISTS ratings (
    user_id INTEGER NOT NULL,
    movie_id INTEGER NOT NULL,
    rating REAL NOT NULL,
    timestamp INTEGER NOT NULL,
    PRIMARY KEY (user_id, movie_id, timestamp),
    FOREIGN KEY (movie_id) REFERENCES movies(movie_id),
    FOREIGN KEY (user_id) REFERENCES users(user_id)
);
CREATE TABLE IF NOT EXISTS tags (
    user_id INTEGER NOT NULL,
    movie_id INTEGER NOT NULL,
    tag TEXT NOT NULL,
    timestamp INTEGER NOT NULL,
    PRIMARY KEY (user_id, movie_id, tag, timestamp),
    FOREIGN KEY (movie_id) REFERENCES movies(movie_id)
);
CREATE TABLE IF NOT EXISTS links (
    movie_id INTEGER PRIMARY KEY,
    imdb_id INTEGER,
    tmdb_id INTEGER,
    FOREIGN KEY (movie_id) REFERENCES movies(movie_id)
);
CREATE INDEX IF NOT EXISTS idx_ratings_user ON ratings(user_id);
CREATE INDEX IF NOT EXISTS idx_ratings_movie ON ratings(movie_id);
CREATE INDEX IF NOT EXISTS idx_tags_movie ON tags(movie_id);
"""

def main() -> None:
    sql = SCHEMA_SQL_PG if IS_PG else SCHEMA_SQL_SQLITE
    with get_db(readonly=False) as conn:
        cur = conn.cursor()
        for stmt in [s.strip() for s in sql.split(";") if s.strip()]:
            cur.execute(stmt + ";")
    print("âœ… Database schema created")

if __name__ == "__main__":
    main()